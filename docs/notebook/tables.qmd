---
title: ""
---

## Table: Sensitivity analysis for intercept only model

```{r}
#| label: SA_intercept_only_table

pacman::p_load(gt,dplyr,metafor)

# Loading the models including flagged proxies
SA_lnRR_flagged<-readRDS(here::here("sensitivity_analysis/SA_lnRR_flagged.rds"))
SA_SMDH_flagged<-readRDS(here::here("sensitivity_analysis/SA_SMDH_flagged.rds"))

# Loading the models without data for those using 0 as ES because authors reported no effect
SA_lnRR_no_missingES<-readRDS(here::here("sensitivity_analysis/SA_lnRR_no_missingES.rds"))
SA_SMDH_no_missingES<-readRDS(here::here("sensitivity_analysis/SA_SMDH_no_missingES.rds"))

# Loading the models without data for those using 0 as ES because authors reported no effect and including flagged proxies
SA_lnRR_flagged_no_missingES<-readRDS(here::here("sensitivity_analysis/SA_lnRR_flagged_no_missingES.rds"))
SA_SMDH_flagged_no_missingES<-readRDS(here::here("sensitivity_analysis/SA_SMDH_flagged_no_missingES.rds"))

# Loading the model for SMDH without inferential statistics. There is none for lnRR because we can only uses means and deviation to estimate lnRR
SA_SMDH_no_inferential<-readRDS(here::here("sensitivity_analysis/SA_SMDH_no_inferential.rds"))


# Now let's build the table

SA_intercept_only <- tibble::tibble(
  effect_size = c("lnRR","lnRR","lnRR","SMDH","SMDH","SMDH","SMDH"),
  data_used = c("Including flagged proxies", "Without those cases where author reported no effect of the treatment", "Including flagged proxies and without the cases with no effect of the treatment", "Including flagged proxies", "Without those cases where author reported no effect of the treatment", "Including flagged proxies and without the cases with no effect of the treatment", "Without the cases where SMDH was calculated from inferential statistics"),
  
  Estimate = c(SA_lnRR_flagged$b[1],
               SA_lnRR_no_missingES$b[1],
               SA_lnRR_flagged_no_missingES$b[1],
               SA_SMDH_flagged$b[1],
               SA_SMDH_no_missingES$b[1],
               SA_SMDH_flagged_no_missingES$b[1],
               SA_SMDH_no_inferential$b[1]),

  CI_Lower = c(SA_lnRR_flagged$ci.lb,
               SA_lnRR_no_missingES$ci.lb,
               SA_lnRR_flagged_no_missingES$ci.lb,
               SA_SMDH_flagged$ci.lb,
               SA_SMDH_no_missingES$ci.lb,
               SA_SMDH_flagged_no_missingES$ci.lb,
               SA_SMDH_no_inferential$ci.lb),

  CI_Upper = c(SA_lnRR_flagged$ci.ub,
               SA_lnRR_no_missingES$ci.ub,
               SA_lnRR_flagged_no_missingES$ci.ub,
               SA_SMDH_flagged$ci.ub,
               SA_SMDH_no_missingES$ci.ub,
               SA_SMDH_flagged_no_missingES$ci.ub,
               SA_SMDH_no_inferential$ci.ub),

  PI_Lower = c(predict(SA_lnRR_flagged)$pi.lb,
               predict(SA_lnRR_no_missingES)$pi.lb,
               predict(SA_lnRR_flagged_no_missingES)$pi.lb,
               predict(SA_SMDH_flagged)$pi.lb,
               predict(SA_SMDH_no_missingES)$pi.lb,
               predict(SA_SMDH_flagged_no_missingES)$pi.lb,
               predict(SA_SMDH_no_inferential)$pi.lb),

  PI_Upper = c(predict(SA_lnRR_flagged)$pi.ub,
               predict(SA_lnRR_no_missingES)$pi.ub,
               predict(SA_lnRR_flagged_no_missingES)$pi.ub,
               predict(SA_SMDH_flagged)$pi.ub,
               predict(SA_SMDH_no_missingES)$pi.ub,
               predict(SA_SMDH_flagged_no_missingES)$pi.ub,
               predict(SA_SMDH_no_inferential)$pi.ub),

  P_value = c(SA_lnRR_flagged$pval,
              SA_lnRR_no_missingES$pval,
              SA_lnRR_flagged_no_missingES$pval,
              SA_SMDH_flagged$pval,
              SA_SMDH_no_missingES$pval,
              SA_SMDH_flagged_no_missingES$pval,
              SA_SMDH_no_inferential$pval),

  Q_value = c(SA_lnRR_flagged$QE,
              SA_lnRR_no_missingES$QE,
              SA_lnRR_flagged_no_missingES$QE,
              SA_SMDH_flagged$QE,
              SA_SMDH_no_missingES$QE,
              SA_SMDH_flagged_no_missingES$QE,
              SA_SMDH_no_inferential$QE),

  k_effect_sizes = c(SA_lnRR_flagged$k,
        SA_lnRR_no_missingES$k,
        SA_lnRR_flagged_no_missingES$k,
        SA_SMDH_flagged$k,
        SA_SMDH_no_missingES$k,
        SA_SMDH_flagged_no_missingES$k,
        SA_SMDH_no_inferential$k),
  
  n_studies = c(length(SA_lnRR_flagged$s.levels.f[[1]]),
                      length(SA_lnRR_no_missingES$s.levels.f[[1]]),
                      length(SA_lnRR_flagged_no_missingES$s.levels.f[[1]]),
                      length(SA_SMDH_flagged$s.levels.f[[1]]),
                      length(SA_SMDH_no_missingES$s.levels.f[[1]]),
                      length(SA_SMDH_flagged_no_missingES$s.levels.f[[1]]),
                      length(SA_SMDH_no_inferential$s.levels.f[[1]])
))


# Combine CI and PI into a single column each for compactness
SA_intercept_only <- SA_intercept_only %>%
  mutate(
    CI = paste0("[", sprintf("%.3f", CI_Lower), ", ", sprintf("%.3f", CI_Upper), "]"),
    PI = paste0("[", sprintf("%.3f", PI_Lower), ", ", sprintf("%.3f", PI_Upper), "]"),
    P_value = scales::pvalue(P_value),
    Q_value = sprintf("%.2f", Q_value)
  ) %>%
  select(
    effect_size,
    data_used,
    Estimate,
    CI,
    PI,
    P_value,
    Q_value,
    k_effect_sizes,
    n_studies
  )

# Let's make this table pretty
SA_intercept_only<-SA_intercept_only%>%
  gt()%>%
  tab_options(
    table.font.size = px(12),
    table.border.top.color = "black",
    table.border.bottom.color = "black",
    heading.title.font.size = px(14),
    heading.subtitle.font.size = px(12),
    column_labels.font.weight = "bold"
  ) %>%
  tab_header(
    title = md("**Summary of Sensitivity Analyses for lnRR and SMDH Intercept-only models**")
  ) %>%
  cols_label(
    effect_size = "Effect Size",
    data_used = "Data used in model",
    Estimate = "Estimate",
    CI = "95% CI",
    PI = "95% PI",
    P_value = "P-value",
    Q_value = "Q value",
    k_effect_sizes = "k (No. of Effect Sizes)",
    n_studies = "n (No. of Studies)"
  ) %>%
  fmt_number(
    columns = c(Estimate),
    decimals = 3
  ) %>%
  tab_style(
    style = cell_borders(
      sides = "bottom",
      color = "black",
      weight = px(1)
    ),
    locations = cells_body()
  ) %>%
  tab_options(
    table.font.size = "small",
    heading.title.font.size = 14,
    table.border.top.width = px(2),
    column_labels.font.weight = "bold",
    row_group.font.weight = "bold"
  ) %>%
  opt_table_outline()

#saving as a docx file
gtsave(SA_intercept_only,here::here("tables/SA_intercept_only.docx"))
gtsave(SA_intercept_only,here::here("tables/SA_intercept_only.html"))
```

## Table: Output from meta-regressions

```{r}

pacman::p_load(gt, tidyverse, metafor, purrr, stringr)

# Loading models for experimental design
lnRR_design<-readRDS(here::here("model/lnRR_design.rds"))
SMDH_design<-readRDS(here::here("model/SMDH_design.rds"))

# Loading models for parasite type
lnRR_parasite<-readRDS(here::here("model/lnRR_parasite.rds"))
SMDH_parasite<-readRDS(here::here("model/SMDH_parasite.rds"))

# Loading models for time of green nest material addition
lnRR_time_gnm_addition<-readRDS(here::here("model/lnRR_time_gnm_addition.rds"))
SMDH_time_gnm_addition<-readRDS(here::here("model/SMDH_time_gnm_addition.rds"))

# Loading models for the type of trait studied
lnRR_trait<-readRDS(here::here("model/lnRR_trait.rds"))
SMDH_trait<-readRDS(here::here("model/SMDH_trait.rds"))

# Loading models for the bird species studied
lnRR_birds<-readRDS(here::here("model/lnRR_birds.rds"))
SMDH_birds<-readRDS(here::here("model/SMDH_birds.rds"))
```

```{r}

# Let's source our custom function to extract values from the meta-regressions
source(here::here("functions/extractor_metareg.R"))

## For lnRR Values
lnRR_results <- extractor_metareg(lnRR_parasite,"parasite_type")%>%
  bind_rows(extractor_metareg(lnRR_birds,"bird_species"))%>%
  bind_rows(extractor_metareg(lnRR_trait,"trait_type"))%>%
  bind_rows(extractor_metareg(lnRR_design,"comparision_type"))%>%
  bind_rows(extractor_metareg(lnRR_time_gnm_addition,"time_of_gnm_addition"))%>%
  mutate(effect_size = "lnRR")

## For SMDH Values
SMDH_results <- extractor_metareg(SMDH_parasite,"parasite_type")%>%
  bind_rows(extractor_metareg(SMDH_birds,"bird_species"))%>%
  bind_rows(extractor_metareg(SMDH_trait,"trait_type"))%>%
  bind_rows(extractor_metareg(SMDH_design,"comparision_type"))%>%
  bind_rows(extractor_metareg(SMDH_time_gnm_addition,"time_of_gnm_addition"))%>%
  mutate(effect_size = "SMDH")

## Now let's write the table for publication:
# Combine both results
combined_results <- bind_rows(lnRR_results, SMDH_results)%>%
  pivot_wider(
    id_cols = c(moderator, level),
    names_from = effect_size,
    values_from = c(estimate, p_value, CI, PI, k, n),
    names_glue = "{.value}_{effect_size}"
  )%>% # Prepare row labels to mimic grouping
  arrange(moderator, level)%>%
  mutate(row_type = "level")

# Create moderator header rows for heterogeneity metrics
  moderator_header<-bind_rows(lnRR_results, SMDH_results) %>%
  select(moderator, effect_size, Q, Q_pval, R2_marginal) %>%
    distinct()%>%
    pivot_wider(
      names_from = effect_size,
      values_from = c(Q, Q_pval, R2_marginal),
      names_glue = "{.value}_{effect_size}"
    )%>%
  mutate(level = "Heterogeneity ",
         row_type = "moderator")

# Final combined table with headers and levels
combined_results <- bind_rows(moderator_header, combined_results) %>%
  arrange(moderator, row_type)%>% select(-row_type)%>%
  relocate(level, .after = moderator)%>%
  mutate(moderator=case_when(moderator=="parasite_type"~"Parasite Type",
                             moderator=="bird_species"~"Bird Species",
                             moderator=="trait_type"~"Trait Type Category",
                             moderator=="comparision_type"~"Experimental Design",
                             moderator=="time_of_gnm_addition"~"Time of Green Nest Material Addition"))%>%
  mutate(level = case_when(level==1 ~ "Non-aromatic vs. Aromatic",
                           level==2 ~ "No added material vs. Aromatic",
                           level==3 ~ "No added material vs. Non-aromatic",
                           level=="a" ~ "After egg hatching",
                           level=="b" ~ "Before egg hatching",
                           level=="c" ~ "Continously through nesting phase",
                           level=="Parasitic_and_pathogenic"~"Parasitic and Pathogen Related", .default=level))



# Optional: clean up or reorder columns for display
# Select and order columns for clarity
MLMR_table <- combined_results %>%
  gt(groupname_col = "moderator") %>%
  tab_header(title = md("**Multilevel Meta-analytic Models for Exploratory Analyses**")) %>%
  cols_label(
    Q_lnRR = "Q",
    Q_pval_lnRR = "Q p-val",
    R2_marginal_lnRR = "R²_mar",
    Q_SMDH = "Q",
    Q_pval_SMDH = "Q p-val",
    R2_marginal_SMDH = "R²_mar",
    level = "Level",
    estimate_lnRR = "Estimate",
    CI_lnRR = "95% CI",
    PI_lnRR = "95% PI",
    p_value_lnRR = "P-val",
    k_lnRR = "k",
    n_lnRR = "n",
    estimate_SMDH = "Estimate",
    CI_SMDH = "95% CI",
    PI_SMDH = "95% PI",
    p_value_SMDH = "P-val",
    k_SMDH = "k",
    n_SMDH = "n"
  ) %>%
   sub_missing(
    columns = everything(),
    missing_text = ""
  ) %>%
  opt_table_outline() %>%
  tab_options(
    table.font.size = "small",
    heading.title.font.size = 12,
    table.border.top.width = px(2),
    column_labels.font.weight = "medium",
    row_group.font.weight = "bold"
  )   %>%
  tab_style(
    style = cell_borders(
      sides = "bottom",
      color = "black",
      weight = px(1)
    ),
    locations = cells_body()
  ) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      rows = level == "Heterogeneity"
    ))%>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      columns = c(p_value_lnRR),
      rows = p_value_lnRR < 0.05
    )
  ) %>%
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_body(
      columns = c(p_value_SMDH),
      rows = p_value_SMDH < 0.05
    )
  )%>%
  tab_spanner(label = "lnRR", columns = contains("_lnRR")) %>%
  tab_spanner(label = "SMDH", columns = contains("_SMDH"))


#saving as a docx file
gtsave(MLMR_table,here::here("tables/EA_MLMR_table.docx"))
gtsave(MLMR_table,here::here("tables/EA_MLMR_table.html"))
```
